{
  "version": 3,
  "sources": ["../../../../../node_modules/@cfpb/cfpb-analytics/src/cfpb-analytics.js", "../../../../unprocessed/apps/analytics-gtm/js/util/analytics-util.js", "../../../../unprocessed/apps/analytics-gtm/js/bah-check-rates-listeners.js"],
  "sourcesContent": ["/**\n * Log a message to the console if the `debug-gtm` URL parameter is set.\n * @param {string} msg - Message to load to the console.\n */\nfunction analyticsLog(...msg) {\n  // Check if URLSearchParams is supported (Chrome > 48; Edge > 16).\n  if (typeof window.URLSearchParams === 'function') {\n    // Get query params.\n    const queryParams = new URLSearchParams(window.location.search);\n    if (queryParams.get('debug-gtm') === 'true') {\n      // eslint-disable-next-line no-console\n      console.log(`ANALYTICS DEBUG MODE: ${msg}`);\n    }\n  }\n}\n\nlet loadTryCount = 0;\n\n/**\n * @returns {boolean} Whether GTM has been loaded or not.\n */\nfunction _isGtmLoaded() {\n  window.dataLayer = window.dataLayer || [];\n  const gtmStartedEvent = window.dataLayer.find(\n    (element) => element['gtm.start'],\n  );\n\n  if (!gtmStartedEvent) {\n    // Not even the GTM inline config has executed.\n    return false;\n  } else if (!gtmStartedEvent['gtm.uniqueEventId']) {\n    // GTM inline config has run, but the main GTM JS has not loaded.\n    return false;\n  }\n\n  // GTM is fully loaded and working.\n  return true;\n}\n\n/**\n * Poll every 0.5 seconds for 10 seconds for if Google Tag Manager has loaded.\n * @returns {Promise} Resolves if Google Tag Manager has loaded.\n *   Rejects if polling has completed.\n */\nfunction ensureGoogleTagManagerLoaded() {\n  return new Promise(function (resolve, reject) {\n    (function waitForGoogleTagManager() {\n      if (_isGtmLoaded()) return resolve();\n      if (++loadTryCount > 9) return reject();\n      setTimeout(waitForGoogleTagManager, 500);\n    })();\n  });\n}\n\n/**\n * @name analyticsSendEvent\n * @kind function\n * @description\n *   Pushes an event to the GTM dataLayer.\n *   This can accept arbitrary values, but traditionally (pre-GA4) would accept\n *   event, action, and label. Th eventCallback and eventTimeout values can also\n *   be sent, which are called if there's an issue loading GTM.\n * @param {object} payload - A list or a single event.\n * @param {string} payload.event - Type of event.\n * @param {string} payload.action - Name of event.\n * @param {string} payload.label - DOM element label.\n * @param {Function} [payload.eventCallback] - Function to call on GTM submission.\n * @param {number} [payload.eventTimeout] - Callback invocation fallback time.\n * @returns {Promise} Resolves if the event is sent,\n *   otherwise calls the callback if provided.\n */\nfunction analyticsSendEvent(payload) {\n  return ensureGoogleTagManagerLoaded()\n    .then(() => {\n      // GTM should be loaded at this point.\n      const printPayload = [];\n      Object.entries(payload).forEach(([key, value]) => {\n        printPayload.push(`(${key}: ${value})`);\n      });\n\n      analyticsLog(`Sending \"${printPayload.join(', ')}\"`);\n      window.dataLayer.push(payload);\n    })\n    .catch(() => {\n      if (\n        payload.eventCallback &&\n        typeof payload.eventCallback === 'function'\n      ) {\n        // eslint-disable-next-line callback-return\n        payload.eventCallback();\n      }\n    });\n}\n\nexport { analyticsSendEvent, analyticsLog };\n", "import { analyticsLog } from '@cfpb/cfpb-analytics';\n\n/**\n * Query a selector and add listeners to returned elements.\n * @param {string} selector - A dom selector.\n * @param {string} event - An event string, probably a \"MouseEvent.\"\n * @param {Function} callback - The event handler.\n */\nfunction addEventListenerToSelector(selector, event, callback) {\n  const elems = document.querySelectorAll(selector);\n  for (let i = 0, len = elems.length; i < len; i++) {\n    addEventListenerToElem(elems[i], event, callback);\n  }\n}\n\n/**\n * Check if an element exists on the page, and if it does, add listeners.\n * @param {HTMLElement} [elem] - The element to attach an event to.\n * @param {string} [event] - The event type string.\n * @param {Function} callback - Function to call when the event triggers.\n */\nfunction addEventListenerToElem(elem, event, callback) {\n  if (elem) {\n    elem.addEventListener(event, callback);\n  } else {\n    analyticsLog(`${elem} doesn't exist!`);\n  }\n}\n\n/**\n * Create a delay given a callback function and millisecond delay.\n * @class\n */\nfunction Delay() {\n  let timer = 0;\n  return function (callback, ms) {\n    clearTimeout(timer);\n    timer = setTimeout(callback, ms);\n  };\n}\n\nexport { addEventListenerToSelector, addEventListenerToElem, Delay };\n", "import { analyticsSendEvent } from '@cfpb/cfpb-analytics';\nimport { Delay, addEventListenerToElem } from './util/analytics-util';\n\n(function () {\n  // credit score slider\n  const rangeSliders = document.querySelectorAll('.rangeslider');\n  let rangeSliderEl;\n  for (let i = 0, len = rangeSliders.length; i < len; i++) {\n    rangeSliderEl = rangeSliders[i];\n    addEventListenerToElem(rangeSliderEl, 'click', _rangeSliderEventHandler);\n    addEventListenerToElem(rangeSliderEl, 'touchend', _rangeSliderEventHandler);\n  }\n\n  /**\n   * Event handler for range slider interactions.\n   */\n  function _rangeSliderEventHandler() {\n    const sliderRangeEl = document.querySelector('#slider-range');\n    const score = sliderRangeEl.textContent;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Score range',\n      label: score,\n    });\n  }\n\n  // state select\n  const locationEl = document.querySelector('#location');\n  addEventListenerToElem(locationEl, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Select state',\n      label: value,\n    });\n  });\n\n  // house price\n  const housePriceDelay = new Delay();\n  const housePriceEl = document.querySelector('#house-price');\n  addEventListenerToElem(housePriceEl, 'keyup', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    housePriceDelay(() => {\n      analyticsSendEvent({\n        event: 'OAH Rate Tool Interactions',\n        action: 'House price',\n        label: value,\n      });\n    }, 5000);\n  });\n\n  // down payment percentage\n  const percentDownDelay = new Delay();\n  const percentDownEl = document.querySelector('#percent-down');\n  addEventListenerToElem(percentDownEl, 'keyup', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    percentDownDelay(() => {\n      analyticsSendEvent({\n        event: 'OAH Rate Tool Interactions',\n        action: 'Down payment percent',\n        label: value,\n      });\n    }, 5000);\n  });\n\n  // down payment $\n  const downPaymentDelay = new Delay();\n  const downPaymentEl = document.querySelector('#down-payment');\n  addEventListenerToElem(downPaymentEl, 'keyup', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    downPaymentDelay(() => {\n      analyticsSendEvent({\n        event: 'OAH Rate Tool Interactions',\n        action: 'Down payment amount',\n        label: value,\n      });\n    }, 5000);\n  });\n\n  // rate structure\n  const rateStructureEl = document.querySelector('#rate-structure');\n  addEventListenerToElem(rateStructureEl, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Rate structure',\n      label: value,\n    });\n  });\n\n  // loan term\n  const loanTermEl = document.querySelector('#loan-term');\n  addEventListenerToElem(loanTermEl, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Loan term',\n      label: value,\n    });\n  });\n\n  // loan type\n  const loanTypeEl = document.querySelector('#loan-type');\n  addEventListenerToElem(loanTypeEl, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Loan type',\n      label: value,\n    });\n  });\n\n  // arm type\n  const armTypeEl = document.querySelector('#arm-type');\n  addEventListenerToElem(armTypeEl, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'ARM type',\n      label: value,\n    });\n  });\n\n  // rate comparison select #1\n  const rateCompare1El = document.querySelector('#rate-compare-1');\n  addEventListenerToElem(rateCompare1El, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Interest cost 1',\n      label: value,\n    });\n  });\n\n  // rate comparison select #2\n  const rateCompare2El = document.querySelector('#rate-compare-2');\n  addEventListenerToElem(rateCompare2El, 'change', function (evt) {\n    const target = evt.target;\n    const value = target.value;\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Interest cost 2',\n      label: value,\n    });\n  });\n\n  // page reload link\n  const reloadLinkEl = document.querySelector('#reload-link');\n  addEventListenerToElem(reloadLinkEl, 'click', function () {\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Revert',\n      label: '/owning-a-home/rate-checker',\n    });\n  });\n\n  // next steps: I plan to buy in the next couple of months\n  const planToBuyTabEl = document.querySelector('#plan-to-buy-tab');\n  addEventListenerToElem(planToBuyTabEl, 'click', function () {\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Click',\n      label: 'Collapsed_Tabs_Buying',\n    });\n  });\n\n  // next steps: I won't buy for several months\n  const wontBuyTabEl = document.querySelector('#wont-buy-tab');\n  addEventListenerToElem(wontBuyTabEl, 'click', function () {\n    analyticsSendEvent({\n      event: 'OAH Rate Tool Interactions',\n      action: 'Click',\n      label: 'Collapsed_Tabs_Not_Buying',\n    });\n  });\n})();\n"],
  "mappings": "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",
  "names": ["analyticsLog", "msg", "loadTryCount", "_isGtmLoaded", "gtmStartedEvent", "element", "ensureGoogleTagManagerLoaded", "resolve", "reject", "waitForGoogleTagManager", "analyticsSendEvent", "payload", "printPayload", "key", "value", "addEventListenerToElem", "elem", "event", "callback", "analyticsLog", "Delay", "timer", "ms", "rangeSliders", "rangeSliderEl", "i", "len", "addEventListenerToElem", "_rangeSliderEventHandler", "score", "analyticsSendEvent", "locationEl", "evt", "value", "housePriceDelay", "Delay", "housePriceEl", "percentDownDelay", "percentDownEl", "downPaymentDelay", "downPaymentEl", "rateStructureEl", "loanTermEl", "loanTypeEl", "armTypeEl", "rateCompare1El", "rateCompare2El", "reloadLinkEl", "planToBuyTabEl", "wontBuyTabEl"]
}
