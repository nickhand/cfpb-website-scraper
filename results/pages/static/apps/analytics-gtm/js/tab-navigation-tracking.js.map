{
  "version": 3,
  "sources": ["../../../../unprocessed/js/modules/util/web-storage-proxy.js", "../../../../unprocessed/apps/analytics-gtm/js/tab-navigation-tracking.js"],
  "sourcesContent": ["/* ==========================================================================\n   Web Storage proxy utility.\n   An interface for interacting with web storage\n   (local storage and session storage).\n   Note: values stored in local storage are not accessible from session storage\n   and vice versa. They both work on different objects within the browser.\n   If web storage is not available, values are dumped into an object literal\n   to keep the fuctionality of the API, but will not be saved across sessions.\n   ========================================================================= */\n\n// Default storage type.\nlet _storage;\n\n/**\n * Set an item value specified by the key in web storage.\n * @param {string} key - The key for the value.\n * @param {string} value - The value to store.\n * @param {object} [storage] - (Optional)\n *   Use non-persistent storage (sessionStorage)\n *   or persistent storage (localStorage).\n * @returns {string} The value set in web storage.\n */\nfunction setItem(key, value, storage) {\n  storage = _getStorageType(storage);\n  if (storage.setItem) {\n    storage.setItem(key, value);\n  } else {\n    storage[key] = value;\n  }\n\n  return value;\n}\n\n/**\n * Get an item value specified by the key in web storage.\n * @param {string} key - The key for the value.\n * @param {object} [storage] - (Optional)\n *   Use non-persistent storage (sessionStorage)\n *   or persistent storage (localStorage).\n * @returns {string} The value set in web storage.\n */\nfunction getItem(key, storage) {\n  storage = _getStorageType(storage);\n\n  return storage.getItem ? storage.getItem(key) : storage[key];\n}\n\n/**\n * Remove an item specified by the key.\n * @param {string} key - The key for the value.\n * @param {object} [storage] - (Optional)\n *   Use non-persistent storage (sessionStorage)\n *   or persistent storage (localStorage).\n * @returns {boolean} Returns true if the item existed and it was\n *   removed. Returns false if the item didn't exist to begin with.\n */\nfunction removeItem(key, storage) {\n  storage = _getStorageType(storage);\n  let returnVal = true;\n\n  if (!getItem(key, storage)) {\n    returnVal = false;\n  }\n\n  if (returnVal) {\n    if (storage.removeItem) {\n      storage.removeItem(key);\n    } else {\n      delete storage[key];\n    }\n  }\n\n  return returnVal;\n}\n\n/**\n * Set the default session type.\n * @param {object} storage -  Use non-persistent storage (sessionStorage)\n *   or persistent storage (localStorage).\n * @throws {Error} If parameter isn't a object.\n */\nfunction setStorage(storage) {\n  if (typeof storage !== 'object') {\n    throw new Error('Setting must be an object.');\n  }\n\n  _storage = storage;\n}\n\n/**\n * Internal function for whether to use local or session storage.\n * @param {object} storage - Use non-persistent storage (sessionStorage)\n *   or persistent storage (localStorage).\n *   Default is sessionStorage.\n * @returns {object} A local storage or session storage instance.\n */\nfunction _getStorageType(storage) {\n  // Use default setting if none is provided.\n  if (storage === null || typeof storage !== 'object') {\n    if (typeof _storage === 'undefined') {\n      try {\n        storage = window.sessionStorage;\n      } catch (err) {\n        // SecurityError was thrown if cookies are off.\n        storage = {};\n      }\n    } else {\n      storage = _storage;\n    }\n  }\n\n  return storage;\n}\n\n// Expose public methods.\nexport default {\n  setItem,\n  getItem,\n  removeItem,\n  setStorage,\n};\n", "import webStorageProxy from '../../../js/modules/util/web-storage-proxy';\n\n// If cookies are turned off, we set localStorage variables to null.\nlet _localStorage;\nlet _sessionStorage;\n\ntry {\n  _localStorage = window.localStorage;\n  _sessionStorage = window.sessionStorage;\n} catch (err) {\n  _localStorage = null;\n  _sessionStorage = null;\n}\n\n/**\n * Adapted from\n * https://www.simoahava.com/analytics/track-browsing-behavior-in-google-analytics/#1-the-why-and-how-theory\n * for tracking tab navigation of the site.\n */\n\n(() => {\n  // Bail out if localStorage is not supported or is blocked.\n  if (!window.Storage || _localStorage === null || _sessionStorage === null) {\n    return;\n  }\n\n  /* Set to false if you only want to register \"BACK/FORWARD\"\n     if either button was pressed. */\n  const detailedBackForward = true;\n\n  let openTabs = JSON.parse(webStorageProxy.getItem('_tab_ids', _localStorage));\n  let tabId = webStorageProxy.getItem('_tab_id', _sessionStorage);\n  let navPath = JSON.parse(\n    webStorageProxy.getItem('_nav_path', _sessionStorage),\n  );\n  const curPage = document.location.href;\n  let newTab = false;\n  const origin = document.location.origin;\n\n  let redirectCount;\n  let navigationType;\n  let prevInStack;\n  let lastInStack;\n\n  /**\n   * Get the navigation path to a tab.\n   * @returns {string} The navigation type.\n   */\n  function getBackForwardNavigation() {\n    if (detailedBackForward === false) {\n      return 'BACK/FORWARD';\n    }\n\n    if (navPath.length < 2) {\n      return 'FORWARD';\n    }\n\n    prevInStack = navPath[navPath.length - 2];\n    lastInStack = navPath[navPath.length - 1];\n\n    if (prevInStack === curPage || lastInStack === curPage) {\n      return 'BACK';\n    }\n    return 'FORWARD';\n  }\n\n  /**\n   * Remove the tracked tab.\n   */\n  function removeTabOnUnload() {\n    let index;\n\n    // Get the most recent values from storage\n    openTabs = JSON.parse(webStorageProxy.getItem('_tab_ids', _localStorage));\n    tabId = webStorageProxy.getItem('_tab_id', _sessionStorage);\n\n    if (openTabs !== null && tabId !== null) {\n      index = openTabs.indexOf(tabId);\n      if (index > -1) {\n        openTabs.splice(index, 1);\n      }\n      webStorageProxy.setItem(\n        '_tab_ids',\n        JSON.stringify(openTabs),\n        _localStorage,\n      );\n    }\n  }\n\n  /**\n   * @returns {string} A unique ID for the tab.\n   */\n  function generateTabId() {\n    // From https://stackoverflow.com/a/8809472/2367037\n    let d = new Date().getTime();\n    if (\n      typeof performance !== 'undefined' &&\n      typeof performance.now === 'function'\n    ) {\n      // Use high-precision timer if available.\n      d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n  }\n\n  /**\n   *\n   * @param {number} type - Describes how the navigation to this page was done.\n   * @param {boolean} isNewTab - Whether we're validating a new tab or not.\n   * @returns {boolean} Return false if new tab and any other navigation type than\n   *   NAVIGATE or OTHER. Otherwise return true.\n   */\n  function validNavigation(type, isNewTab) {\n    return !(isNewTab === true && type !== 0 && type !== 255);\n  }\n\n  if (tabId === null) {\n    tabId = generateTabId();\n    newTab = true;\n    webStorageProxy.setItem('_tab_id', tabId, _sessionStorage);\n  }\n\n  openTabs = openTabs || [];\n\n  if (openTabs.indexOf(tabId) === -1) {\n    openTabs.push(tabId);\n    webStorageProxy.setItem(\n      '_tab_ids',\n      JSON.stringify(openTabs),\n      _localStorage,\n    );\n  }\n\n  const tabCount = openTabs.length;\n\n  if (window.PerformanceNavigation) {\n    navPath = navPath || [];\n    redirectCount = window.performance.navigation.redirectCount;\n    // Only track new tabs if type is NAVIGATE or OTHER\n    const navigationTypeID = window.performance.navigation.type;\n    if (validNavigation(navigationTypeID, newTab)) {\n      switch (navigationTypeID) {\n        case 0:\n          navigationType = 'NAVIGATE';\n          navPath.push(curPage);\n          break;\n        case 1:\n          navigationType = 'RELOAD';\n          if (navPath.length === 0 || navPath[navPath.length - 1] !== curPage) {\n            navPath.push(curPage);\n          }\n          break;\n        case 2:\n          navigationType = getBackForwardNavigation();\n          if (navigationType === 'FORWARD') {\n            // Only push if not coming from external domain\n            if (document.referrer.indexOf(origin) > -1) {\n              navPath.push(curPage);\n            }\n          } else if (navigationType === 'BACK') {\n            // Only remove last if not coming from external domain\n            if (lastInStack !== curPage) {\n              navPath.pop();\n            }\n          } else {\n            navPath.push(curPage);\n          }\n          break;\n        default:\n          navigationType = 'OTHER';\n          navPath.push(curPage);\n      }\n    } else {\n      navPath.push(curPage);\n    }\n    try {\n      webStorageProxy.setItem(\n        '_nav_path',\n        JSON.stringify(navPath),\n        sessionStorage,\n      );\n    } catch (exception) {\n      console.log(exception);\n    }\n  }\n\n  window.addEventListener('beforeunload', removeTabOnUnload);\n\n  const payload = {\n    tabCount: tabCount,\n    redirectCount: redirectCount,\n    navigationType: navigationType,\n    newTab: newTab === true ? 'New' : 'Existing',\n    tabId: tabId,\n  };\n\n  // Set the data model keys directly so they can be used in the Page View tag\n  window.google_tag_manager['GTM-KMMLRS'].dataLayer.set(\n    'browsingBehavior',\n    payload,\n  );\n\n  // Also push to dataLayer\n  window.dataLayer.push({\n    event: 'custom.navigation',\n    browsingBehavior: payload,\n  });\n})();\n"],
  "mappings": "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",
  "names": ["_storage", "setItem", "key", "value", "storage", "_getStorageType", "getItem", "removeItem", "returnVal", "setStorage", "err", "web_storage_proxy_default", "_localStorage", "_sessionStorage", "err", "detailedBackForward", "openTabs", "web_storage_proxy_default", "tabId", "navPath", "curPage", "newTab", "origin", "redirectCount", "navigationType", "prevInStack", "lastInStack", "getBackForwardNavigation", "removeTabOnUnload", "index", "generateTabId", "d", "r", "validNavigation", "type", "isNewTab", "tabCount", "navigationTypeID", "exception", "payload"]
}
