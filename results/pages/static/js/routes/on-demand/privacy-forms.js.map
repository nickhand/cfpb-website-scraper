{
  "version": 3,
  "sources": ["../../../../unprocessed/js/routes/on-demand/privacy-forms.js"],
  "sourcesContent": ["const fileInput = document.getElementById('supporting_documentation');\nconst fileListWrapper = document.getElementById('file-list-wrapper');\nconst fileList = document.querySelector('#file-list-wrapper > ul');\nconst radioParent = document.getElementById('mail-radio');\nconst initialCheckedRadio = radioParent.querySelector('input[checked]');\nconst addressWrapper = document.getElementById('mail-target');\nconst form = document.getElementById('privacy-form');\nconst submitIcon = document.getElementById('submit-icon');\n\n/**\n * @param {object} evt - change event fired on fileInput\n */\nfunction fileSelected(evt) {\n  clearSelectedFiles();\n  addFiles(evt.target.files);\n}\n\n/**\n * Clears selected file names and hides file list header\n */\nfunction clearSelectedFiles() {\n  fileList.innerHTML = '';\n  fileListWrapper.className = 'u-hidden';\n}\n\n/**\n * @param {Array} files - DOMList of files provided to the input component\n */\nfunction addFiles(files) {\n  if (files.length) fileListWrapper.className = '';\n  for (const file of files) {\n    addFile(file);\n  }\n}\n\n/**\n * @param {object} file - File object passed through from the change event\n */\nfunction addFile(file) {\n  const li = document.createElement('li');\n  li.innerText = file.name;\n  fileList.appendChild(li);\n}\n\n/**\n * @param {object} evt - Bubbled change event on wrapper radio buttons\n */\nfunction toggleMailingAddress(evt) {\n  openWrapper(evt.target.id);\n}\n\n/**\n * @param {string} id - The id of the current checked toggle\n */\nfunction openWrapper(id) {\n  if (id === 'id_contact_channel_1') {\n    addressWrapper.className = 'open';\n  } else {\n    addressWrapper.className = '';\n  }\n}\n\nopenWrapper(initialCheckedRadio.id);\naddFiles(fileInput.files);\n\nfileInput.addEventListener('change', fileSelected);\nradioParent.addEventListener('change', toggleMailingAddress);\nform.addEventListener('submit', function () {\n  submitIcon.classList.add('submitting');\n});\n"],
  "mappings": "MAAA,IAAMA,EAAY,SAAS,eAAe,0BAA0B,EAC9DC,EAAkB,SAAS,eAAe,mBAAmB,EAC7DC,EAAW,SAAS,cAAc,yBAAyB,EAC3DC,EAAc,SAAS,eAAe,YAAY,EAClDC,EAAsBD,EAAY,cAAc,gBAAgB,EAChEE,EAAiB,SAAS,eAAe,aAAa,EACtDC,EAAO,SAAS,eAAe,cAAc,EAC7CC,EAAa,SAAS,eAAe,aAAa,EAKxD,SAASC,EAAaC,EAAK,CACzBC,EAAmB,EACnBC,EAASF,EAAI,OAAO,KAAK,CAC3B,CAKA,SAASC,GAAqB,CAC5BR,EAAS,UAAY,GACrBD,EAAgB,UAAY,UAC9B,CAKA,SAASU,EAASC,EAAO,CACnBA,EAAM,SAAQX,EAAgB,UAAY,IAC9C,QAAWY,KAAQD,EACjBE,EAAQD,CAAI,CAEhB,CAKA,SAASC,EAAQD,EAAM,CACrB,IAAME,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAYF,EAAK,KACpBX,EAAS,YAAYa,CAAE,CACzB,CAKA,SAASC,EAAqBP,EAAK,CACjCQ,EAAYR,EAAI,OAAO,EAAE,CAC3B,CAKA,SAASQ,EAAYC,EAAI,CACnBA,IAAO,uBACTb,EAAe,UAAY,OAE3BA,EAAe,UAAY,EAE/B,CAEAY,EAAYb,EAAoB,EAAE,EAClCO,EAASX,EAAU,KAAK,EAExBA,EAAU,iBAAiB,SAAUQ,CAAY,EACjDL,EAAY,iBAAiB,SAAUa,CAAoB,EAC3DV,EAAK,iBAAiB,SAAU,UAAY,CAC1CC,EAAW,UAAU,IAAI,YAAY,CACvC,CAAC",
  "names": ["fileInput", "fileListWrapper", "fileList", "radioParent", "initialCheckedRadio", "addressWrapper", "form", "submitIcon", "fileSelected", "evt", "clearSelectedFiles", "addFiles", "files", "file", "addFile", "li", "toggleMailingAddress", "openWrapper", "id"]
}
